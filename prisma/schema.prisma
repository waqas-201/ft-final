// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id        String     @id @default(cuid())
  name      String
  slug      String     @unique
  parentId  String?
  parent    Category?  @relation("CategoryChildren", fields: [parentId], references: [id])
  children  Category[] @relation("CategoryChildren")
  products  Product[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Product {
  id          String    @id @default(cuid())
  name        String
  slug        String    @unique
  description String
  category    Category  @relation(fields: [categoryId], references: [id])
  categoryId  String
  variants    Variant[]
  tags        String
  discount    Float?
  featured    Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Variant {
  id        String  @id @default(cuid())
  name      String
  sku       String  @unique
  price     Float
  stock     Int
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String
  colors    Color[]
}

model Color {
  id        String  @id @default(cuid())
  name      String
  hexCode   String
  images    Image[]
  variant   Variant @relation(fields: [variantId], references: [id], onDelete: Cascade)
  variantId String
}

model Image {
  id      String @id @default(cuid())
  url     String
  alt     String
  color   Color  @relation(fields: [colorId], references: [id], onDelete: Cascade)
  colorId String
}

model Order {
  id           String   @id @default(cuid())
  customerName String
  phone        String
  address      String
  cartItems    String   // JSON string
  total        Float
  status       String   @default("pending")
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model CaseStudy {
  id          String   @id @default(cuid())
  title       String
  slug        String   @unique
  category    String   // "Commercial", "Industrial", "Residential"
  client      String
  location    String
  description String
  challenge   String
  solution    String
  results     String
  imageUrl    String
  beforeImage String?
  afterImage  String?
  duration    String
  area        String
  products    String   // JSON string of products used
  testimonial String?
  featured    Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
